// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	models "github.com/R-Thibault/OrgaJobSearch/backend/models"
	mock "github.com/stretchr/testify/mock"
)

// InvitationServiceInterface is an autogenerated mock type for the InvitationServiceInterface type
type InvitationServiceInterface struct {
	mock.Mock
}

// VerifyPersonnalInvitationTokenData provides a mock function with given fields: token
func (_m *InvitationServiceInterface) VerifyPersonnalInvitationTokenData(token models.JWTToken) (string, error) {
	ret := _m.Called(token)

	if len(ret) == 0 {
		panic("no return value specified for VerifyPersonnalInvitationTokenData")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(models.JWTToken) (string, error)); ok {
		return rf(token)
	}
	if rf, ok := ret.Get(0).(func(models.JWTToken) string); ok {
		r0 = rf(token)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(models.JWTToken) error); ok {
		r1 = rf(token)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewInvitationServiceInterface creates a new instance of InvitationServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewInvitationServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *InvitationServiceInterface {
	mock := &InvitationServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
